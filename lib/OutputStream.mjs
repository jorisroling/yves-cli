import stream from 'stream'

import colors from 'colors'

// Generated by CoffeeScript 1.10.0
export default function() {
  var OutputStream, 
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;



  /*
  * A custom stream. Doesn't do much.
   */

  OutputStream = (function(superClass) {
    extend(OutputStream, superClass);

    function OutputStream(options) {
      if (options == null) {
        options = {};
      }
      this.writable = true;
      this.options = options;
    }

    OutputStream.prototype.write = function(chunk, encoding) {
      if (!this.options.color) {
        chunk = chunk.stripColors;
      }
      return this.emit('data', chunk);
    };

    OutputStream.prototype.puts = function(chunk, encoding) {
      return this.write(chunk + '\n', encoding);
    };

    OutputStream.prototype.end = function(chunk) {
      if (chunk != null) {
        this.emit('data', chunk);
      }
      return this.emit('end');
    };

    return OutputStream;

  })(stream.Stream);

  return OutputStream;

}
